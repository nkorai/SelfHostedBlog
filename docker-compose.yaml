version: '3'

services:
  ghost:
    container_name: ghost
    image: ghost:alpine
    restart: always
    hostname: ghost
    environment:
      - url="https://${DOMAIN_NAME}/"
      - NODE_ENV=production
    volumes:
      - /ghost-content:/var/lib/ghost/content
      - ${PWD}/build/ghost/config.production.json:/var/lib/ghost/config.production.json
  rproxy:
    container_name: rproxy
    hostname: rproxy
    image: nginx
    restart: always
    depends_on:
      - "ghost"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./build/nginx/:/etc/nginx
      - ./build/ssl/private:/etc/ssl/private
  letsencrypt:
    container_name: letsencrypt
    image: gordonchan/auto-letsencrypt
    volumes:
      - /var/log/letsencrypt/:/var/log/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      - ./build/ssl/private:/etc/nginx/certs
      - ./build/ssl/private:/tmp/letsencrypt/www
    depends_on:
      - "rproxy"
    environment:
      - EMAIL=${EMAIL_ADDRESS}
      - SERVER_CONTAINER=rproxy
      - WEBROOT_PATH=/tmp/letsencrypt/www
      - CERTS_PATH=/etc/nginx/certs
      - DOMAINS=${DOMAIN_NAME}
      - CHECK_FREQ=7
      - DRY_RUN=true
    restart: always
  ddns-updater:
    image: qmcgaw/ddns-updater
    container_name: ddns-updater
    restart: always
    network_mode: bridge
    ports:
      - 8000:8000/tcp
    volumes:
      - ./build/ddns:/updater/data
    environment:
      - PERIOD=5m
      - UPDATE_COOLDOWN_PERIOD=5m
      - PUBLICIP_FETCHERS=all
      - PUBLICIP_HTTP_PROVIDERS=all
      - PUBLICIPV4_HTTP_PROVIDERS=all
      - PUBLICIPV6_HTTP_PROVIDERS=all
      - PUBLICIP_DNS_PROVIDERS=all
      - PUBLICIP_DNS_TIMEOUT=3s
      - HTTP_TIMEOUT=10s

      # Web UI
      - LISTENING_PORT=8000
      - ROOT_URL=/

      # Backup
      - BACKUP_PERIOD=0 # 0 to disable
      - BACKUP_DIRECTORY=/updater/data

      # Other
      - LOG_LEVEL=info
      - LOG_CALLER=hidden
  s3_backup:
    image: elementar/s3-volume
    command: /data s3://nkorai-blog
    environment:
      - "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
      - BACKUP_INTERVAL=12h
    volumes:
      - "${GHOST_CONTENT_DIRECTORY_FULL_PATH}:/data"